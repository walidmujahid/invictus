// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc7193.invictus.subsystems;

import edu.wpi.first.wpilibj.Joystick;

import org.usfirst.frc7193.invictus.RobotMap;

import org.usfirst.frc7193.invictus.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final WPI_TalonSRX rD1 = RobotMap.driveTrainRD1;
    private final WPI_TalonSRX rD2 = RobotMap.driveTrainRD2;
    private final SpeedControllerGroup rightDrive = RobotMap.driveTrainRightDrive;
    private final WPI_TalonSRX lD1 = RobotMap.driveTrainLD1;
    private final WPI_TalonSRX lD2 = RobotMap.driveTrainLD2;
    private final SpeedControllerGroup leftDrive = RobotMap.driveTrainLeftDrive;
    private final DifferentialDrive drive = RobotMap.driveTrainDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    
    public void Drive(Joystick joystick) {
    	drive.arcadeDrive(joystick.getY(), joystick.getX(), true);
    }
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

